<!DOCTYPE html PUBLIC "-//w3c//dtd html 4.0 transitional//en">
<html><head>


   <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
   <meta name="Author" content="Charles Welty">
   <meta name="GENERATOR" content="Microsoft FrontPage 5.0"><title>Input/Output Using JOptionPane</title><!-- base href="http://www.cs.usm.maine.edu/~welty/cos160/JOptionPane/I_O_Using_JOptionPane.htm" --></head><body>

<center><a name="A"></a><b><font size="+1">Input/Output Using JOptionPane (New 
Version, August 26, 2004)</font></b></center>

<p><b>Reasons for using the supplied Java classes instead of the Lewis/Loftus
classes.</b>
</p><ol>
<li>
The standard Java classes allow us to use a more appealing interactive
interface than the MS/DOS-like interface used in the text.</li>

<li>
Your Java programs will run anywhere without having to install the Lewis/Loftus
classes.</li>
</ol>
<b>A.&nbsp; Displaying program output.</b>
<p>The first program (Chapter 1, page 28) is listed below.&nbsp; This program
just displays a predefined message.
</p><p>&nbsp; //Lincoln.java&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Author: Lewis/Loftus
<br>&nbsp; //Demonstrates the basic structure of a Java application.
</p><p>&nbsp; public class Lincoln
<br>&nbsp; {
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //Prints a presidential quote.
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public static void main (String[]
args)
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.out.println
("A quote by Abraham Lincoln:");
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.out.println
("Whatever you are, be a good one.");
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }
<br>&nbsp;}
</p><p>We would instead use the following.
</p><p>&nbsp; //LincolnW.java&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Author: Lewis/Loftus modified by Welty
<br>&nbsp; //Demonstrates the basic structure of a Java application.
</p><p>&nbsp; import javax.swing.*;
</p><p>&nbsp; public class LincolnW
<br>&nbsp; {
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //Prints a presidential quote.
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public static void main (String[]
args)
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
JOptionPane.showMessageDialog(null,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
// Always use null.
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
"A quote by Abraham Lincoln:\n Whatever you are, be a good one.",&nbsp;&nbsp;&nbsp;&nbsp;
// Message string
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
"Lincoln
quote.",&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
//Window caption.
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
JOptionPane.INFORMATION_MESSAGE);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
// Says what kind of window
</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.exit(0);
<br>&nbsp;&nbsp;&nbsp;&nbsp; }
<br>&nbsp;}
</p><p>The first version (Lewis and Loftus) yields the following MS-DOS screen
output.
</p><p><img src="I_O_Using_JOptionPane_files/image002.jpg" height="120" width="320">
</p><p>The second version (Lewis, Loftus, Welty) yields the following display.
</p><p><img src="I_O_Using_JOptionPane_files/image004.jpg" height="120" width="240">
<br>The above is called an informational dialog box.&nbsp; This dialog
box is generated by your program and gives the program a more modern look
and feel.&nbsp; The JOptionPane statement is the first four lines of the
program after
</p><p>public static&nbsp; void main (String[] args)
</p><p>The first line will always be as shown for all information dialog boxes.&nbsp;
The comments in the second Java program show that the second line of the
JOptionPane statement contains the message to be displayed.&nbsp; The third
line contains the dialog box title, &#8220;Lincoln quote&#8221;.&nbsp; The last line
of the JOptionPane statement says that this is an information dialog box
and puts the circled i on the box.
</p><p>The main change is to replace the two following lines of the original
program
</p><p>&nbsp;&nbsp;&nbsp;&nbsp; System.out.println ("A quote by Abraham Lincoln:");
<br>&nbsp;&nbsp;&nbsp;&nbsp; System.out.println ("Whatever you are, be
a good one.");
</p><p>with the following
</p><p>&nbsp;&nbsp;&nbsp;&nbsp; JOptionPane.showMessageDialog(null
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; "A quote
by Abraham Lincoln:\n Whatever you are, be a good one.",
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; "Lincoln quote.",
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; JOptionPane.INFORMATION_MESSAGE);
</p><p>The first version (println) prints to an MS/DOS screen.&nbsp; The second
creates its own dialog box.&nbsp; In the second version the first and 4th
lines are always as shown.&nbsp; The message line (line 2) will vary depending
on what you are printing.&nbsp; The caption (or label) on line 3 will also
change depending on what name you want to give the dialog box.&nbsp; The
lines following the first line are indented to show that they are all part
of the same statement.
</p><p>We will not go into detail on why "null" is used on the first line.
</p><p>The &#8220;\n&#8221; in the message string causes a new line to be started at that
point.&nbsp; Without it, the message would all be displayed on one line.
</p><p>The last line will change for other types of dialog boxes.&nbsp; This
is what the word "Option" means - we can choose which kind of dialog box
to display depending on the option specified in the last line.&nbsp; The
word "Pane" means that we are defining a dialog box which can be though
of as a window and we are defining what is shown in the window pane.
</p><p>In the second version we also have to import some files.&nbsp; This
is done by the import statement (import javax.swing.*;).&nbsp; This statement
imports into the program the definitions needed to use the JOptionPane
class and its associated functions (methods).&nbsp; The first letter in
most classes in the swing package is "J".
</p><p>Finally, the System.exit(0); statement just shuts the program down.
<br>&nbsp;
</p><p><a name="B"></a><b>B.&nbsp; Getting input from the user.</b>
</p><p>Another program from the text (page 91) is shown below.&nbsp; [Note:&nbsp; 
The Scanner class used in the following and in the text is not available at the 
beginning of the fall semester, 2004.&nbsp;&nbsp; JOptionPane is.&nbsp; 
Therefore it is required that you use JOptionPane.]</p><p>//Echo.javaAuthor: Lewis/Loftus
<br>// Demonstrates the use of the nextLine method of the Scanner class<br>
// to read a string from the user.<br>
<br>
import java.util.Scanner;<br>
<br>
public class Echo<br>
{<br>
&nbsp;&nbsp; //-----------------------------------------------------------------<br>
&nbsp;&nbsp; // Reads a character string from the user and prints it.<br>
&nbsp;&nbsp; //-----------------------------------------------------------------<br>
<br>
&nbsp;&nbsp; import java.util.Scanner;<br>
<br>
&nbsp;&nbsp; public static void main (String[] args)<br>
&nbsp; {<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; String message;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Scanner scan = new Scanner (System.in);<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.out.println ("Enter a line of text:");<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; message = scan.nextLine();<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.out.println ("You entered: \"" + message + 
"\"");<br>
&nbsp;&nbsp; }<br>
}<br>
The interactive session looks as follows. The program generated the
prompting line, "Enter a line of text."&nbsp; The user entered the line,
&#8220;This is a line of text&#8221;.
</p><p><img src="I_O_Using_JOptionPane_files/image006.jpg" height="133" width="382">
</p><p>This program reads in the line you (the user) entered and just prints
it out.&nbsp; That is why the name of the class is Echo.
</p><p>The modified version of this program is.
</p><p>&nbsp; //EchoW.javaAuthor: Lewis/Loftus - modified by Welty
<br>&nbsp; //Demonstrates the use of the showInputDialog method of the
JOptionPane class.
</p><p>&nbsp; import javax.swing.*;
</p><p>&nbsp; public class EchoW
<br>&nbsp; {
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //Reads a character string
entered by the user and prints it.
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public static void main
(String[] args)
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; String
message;
</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //&nbsp;
Get the message.
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; message
=JOptionPane.showInputDialog("Enter a line of text:");
</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //&nbsp;
Display the message.
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; JOptionPane.showMessageDialog(null,
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
message,
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
"Your message",
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
JOptionPane.INFORMATION_MESSAGE);
</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.exit(0);
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }
<br>&nbsp;}
</p><p>The interactive session consists of two windows, the first getting the
message and the second one displaying the message.
</p><p><img src="I_O_Using_JOptionPane_files/image008.jpg" height="120" width="560">
</p><p>The second JOptionPane statement is basically the same as in the previous
program.&nbsp; It just displays the message in the string variable named
message.
</p><p>The JOptionPane.showInputDialog statement puts up the first window.&nbsp;
The input prompt is the only thing you have to specify.&nbsp; The window
automatically
contains a text box into which you can type a message.&nbsp; It also automatically
contains the OK and Cancel buttons, Input caption, and the ? icon specifying
that it wants a response.
</p><p>You enter your message and press OK.&nbsp; The statement returns the
string in the text box to the String object named message.
</p><p>The Lewis and Loftus version uses the statements
</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.out.println ("Enter a line of text:");<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; message = scan.nextLine();</p><p>to generate the input prompt (Enter a line of text) and read the message.&nbsp;
Our version uses
</p><p>&nbsp;&nbsp;&nbsp;&nbsp; message =JOptionPane.showInputDialog("Enter
a line of text:");
</p><p>In this single line the prompt is specified and the message is read.&nbsp;
Lewis and Loftus also use the import statement (import java.util.Scanner;) which
defines the Scanner class.
</p><p>The message that you typed is put into the Java String object named
message.&nbsp; The second window is now generated by the OptionPane.showMessageDialog
statement.&nbsp; Notice that the message being printed is the message read
into the first window.
</p><p>We will do one more example, but only our version.&nbsp; This should
be enough to get you started using the JOptionPane class.&nbsp; The program
is Listing 2.9 on
<br>page 92.&nbsp; Our version follows. <br>
<br>
// GasMileageW.java Author: Lewis/Loftus modified by Welty<br>
// Based on Listing 2.9, page 92<br>
// Demonstrates the use of JOptionPane to read numeric data.<br>
<br>
import javax.swing.JOptionPane; <br>
public class GasMileageW<br>
{<br>
&nbsp;&nbsp;&nbsp; // Calculates fuel efficiency based on values entered by the<br>
&nbsp;&nbsp; // user.<br>
&nbsp;&nbsp; public static void main (String[] args)<br>
&nbsp;&nbsp; {<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; String input;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int miles;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; double gallons, mpg;<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; input = JOptionPane.showInputDialog("Enter the 
number of miles: ");<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; miles = Integer.parseInt(input);<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; input = JOptionPane.showInputDialog("Enter the 
gallons of fuel used: ");<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; gallons = Double.parseDouble(input);<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; mpg = miles / gallons;<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; JOptionPane.showMessageDialog(null, <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
"You travelled " + miles + " miles." + <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
"\nYou used " + gallons + " of gas.\n" + <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
"Your mileage was " + mpg + " miles per gallon.",<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
"Mileage",<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
JOptionPane.INFORMATION_MESSAGE);<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.exit(0);<br>
&nbsp;&nbsp; }<br>
}<br>
Due to the length of the message, the continuing lines of the message
were indented under the first line of the message.
</p><p>The interactive session consists of the following 3 windows.
</p><p>&nbsp;<img src="I_O_Using_JOptionPane_files/I_O_Us1.jpg" border="0" height="128" width="297">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<img src="I_O_Using_JOptionPane_files/I_O_Us2.jpg" border="0" height="128" width="297"></p><p>
<img src="I_O_Using_JOptionPane_files/I_O_Us3.jpg" border="0" height="143" width="388"><br>This program uses extensive string concatenation (pages 64 &#8211; 66 of
Lewis and Loftus) to generate the message.
</p><p>Also, in this program we are inputting numeric values to be used
in
arithmetic.&nbsp; Using JOptionPane we always get the input in the form
of a string.&nbsp; We cannot use strings in arithmetic expressions,
they
are stored very differently than numeric values.&nbsp; The number of
miles must be an integer, so we read the string into the String
variable named input and then use Integer.parseInt(input); to convert
the
string to its numeric integer representation.&nbsp; We have to convert
the second input string to a double.&nbsp;&nbsp;&nbsp;&nbsp;
Double.parseDouble(input);
does this.
</p><p>Note:&nbsp; The parse method calls (quantity = Integer.parseInt(input);
and&nbsp;&nbsp;&nbsp; unitPrice = Double.parseDouble(input);) will cause
the program to stop running if you enter values that are not numeric in
the input screens.&nbsp; This will cause the parse routines to try to parse
non-numeric data as if they were numbers and errors will ensue.&nbsp; For
example if you enter&nbsp; $5, the program will "bomb" and a set of fairly
cryptic messages will be displayed.&nbsp; Later on we will see how to test
for this.
<br>&nbsp;</p><p>READ THIS LATER.&nbsp; You will be informed if you
need this.&nbsp; Sometimes it is necessary (or desired) to use a fixed
width font instead
of a variable width font.&nbsp; This is true if you want to make a
simple
drawing. To do this you can create the drawing in a string named
message.&nbsp;
Then use the following.
</p><p>JTextArea textArea = new JTextArea();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
// Sets up an area in which the message will be displayed.
<br>textArea.setEditable(false);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
// Prevents you from writing in the message area.
<br>textArea.setText(message);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
// Put the message into the message area.
<br>textArea.setFont(new Font("Courier", Font.PLAIN, 12));&nbsp;&nbsp;&nbsp;&nbsp;
//&nbsp; Gives you a fixed width font.
<br>JScrollPane scroller = new JScrollPane(textArea);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
//&nbsp; Gives you a scroll bar if the message is long.
<br>JOptionPane.showMessageDialog(null,scroller,"&lt;String for label&gt;",&nbsp;&nbsp;&nbsp;
//&nbsp; Put up the window.
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
JOptionPane.INFORMATION_MESSAGE);
</p><p>
</p><hr width="100%">
<br>&nbsp; Updated&nbsp; August 26, 2004.&nbsp; <a href="http://www.cs.usm.maine.edu/%7Ewelty/">Charles
Welty</a>
</body></html>